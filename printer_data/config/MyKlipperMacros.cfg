[gcode_macro START_PRINT]
gcode:
    {% set BED_TEMP = params.BED_TEMP|default(60)|float %}
    {% set HOTEND_TEMP = params.HOTEND_TEMP|default(195)|float %}

    RESPOND PREFIX=tgnotify MSG="Print starts!"
    M140 S{BED_TEMP} ; Set Heat Bed temperature   
    M104 S140 ; Set Extruder temperature to 140C
    M190 S{BED_TEMP} ; Wait for Heat Bed temperature
    G28 # Home all axes
    SET_FILAMENT_SENSOR SENSOR=RUNOUT ENABLE=1
    
    # If you are generating a new bed mesh:
    BED_MESH_CALIBRATE

    # If you are loading an existing mesh:
    #BED_MESH_PROFILE LOAD=default

    Smart_Park
    
    G92 E0 # Reset Extruder
    M104 S{HOTEND_TEMP} ; Set Extruder temperature
    M109 S{HOTEND_TEMP} ; Wait for Hotend Temperature

    CLEAN_NOZZLE

    Line_Purge
    #WIPE_NOZZLE
    G92 E0 # Reset Extruder
    
    #G1 Z2.0 F3000 # Move Z Axis up little to prevent scratching of Heat Bed
    #G1 X0.1 Y20 Z0.3 F5000.0 # Move to start position
    #G1 X0.1 Y200.0 Z0.3 F1500.0 E15 # Draw the first line
    #G1 X0.4 Y200.0 Z0.3 F5000.0 # Move to side a little
    #G1 X0.4 Y20 Z0.3 F1500.0 E30 # Draw the second line
    #G92 E0 # Reset Extruder
    #G1 Z2.0 F3000 # Move Z Axis up little to prevent scratching of Heat Bed
    #G1 X5 Y20 Z0.3 F5000.0 # Move over to prevent blob squish



[gcode_macro END_PRINT]
gcode:
    G91 #Relative positioning
    G1 E-2 F2700 #Retract a bit
    G1 E-2 Z0.2 F2400 #Retract and raise Z
    G1 X5 Y5 F3000 #Wipe out
    G1 Z10 #Raise Z more
    G90 #Absolute positioning

    G1 X0 Y220 ;Present print
    M106 S0 #Turn-off fan
    M104 S0 #Turn-off hotend
    M140 S0 #Turn-off bed

    M84 X Y E #Disable all steppers but Z
    RESPOND PREFIX=tgnotify MSG="Print ends!"


[gcode_macro TEST_X_AXIS]
gcode:
    G28 #home all axes
    TEST_RESONANCES AXIS=X
    #RUN_SHELL_COMMAND CMD=shaper_calibrate
    RUN_SHELL_COMMAND CMD='~/klipper/scripts/calibrate_shaper.py /tmp/resonances_x_*.csv -o /tmp/shaper_calibrate_x.png'
    RESPOND PREFIX=tg_send_image MSG="path=['/tmp/shaper_calibrate_x.png'], message='Shaper results'"
    #RESPOND TYPE=command MSG='SSH to Klipper and use this command to generate PNG'
    #RESPOND TYPE=command MSG='~/klipper/scripts/calibrate_shaper.py /tmp/resonances_x_*.csv -o /tmp/shaper_calibrate_x.png'
    #RESPOND TYPE=command MSG='File location: /tmp/shaper_calibrate_y.png'

[gcode_macro TEST_Y_AXIS]
gcode:
    G28 #home all axes
    TEST_RESONANCES AXIS=Y
    #RUN_SHELL_COMMAND CMD=shaper_calibrate
    RUN_SHELL_COMMAND CMD='~/klipper/scripts/calibrate_shaper.py /tmp/resonances_y_*.csv -o /tmp/shaper_calibrate_y.png'
    RESPOND PREFIX=tg_send_image MSG="path=['/tmp/shaper_calibrate_y.png'], message='Shaper results'"
    #RESPOND TYPE=command MSG='SSH to Klipper and use this command to generate PNG'
    #RESPOND TYPE=command MSG='~/klipper/scripts/calibrate_shaper.py /tmp/resonances_y_*.csv -o /tmp/shaper_calibrate_y.png'
    #RESPOND TYPE=command MSG='File location: /tmp/shaper_calibrate_y.png'

#[gcode_shell_command shaper_calibrate]
#command: bash /home/pi/printer_data/config/shaper_calibrate.sh
#timeout: 600.
#verbose: True


[gcode_macro M600]
description: Starts process of Filament Change
gcode:
  {% if printer.extruder.temperature < 180 %}
    {action_respond_info("Extruder temperature too low")}
  {% else %}
    PAUSE_MACRO
    _DISABLE_FS
    UNLOAD_FILAMENT
  {% endif %}


[gcode_macro PAUSE_MACRO]
description: Pauses Print
gcode:
    PAUSE
    SET_IDLE_TIMEOUT TIMEOUT={ 30 * 60 }
    

[gcode_macro FC_RESUME]
description: Resume print after Filament Change
gcode:
    ##### read E from pause macro #####
    #{% set E = printer["gcode_macro PAUSE"].extrude|float %} #byÅ‚o PAUSE, a nie PAUSE_MACRO
    #SET_IDLE_TIMEOUT TIMEOUT={ 10 * 60 }
    #G1 E-{ E }
    
    SET_FILAMENT_SENSOR SENSOR=RUNOUT ENABLE=1
    # Reset extruder position
    G92 E0
    RESUME


[gcode_macro UNLOAD_FILAMENT]
description: Unloads Filament from extruder
gcode:
  {% if printer.extruder.temperature < 180 %}
    {action_respond_info("Extruder temperature too low")}
  {% else %}
    SAVE_GCODE_STATE NAME=UNLOAD_state
    {% set Z = params.Z|default(50)|int %}
    {% set axis_max = printer.toolhead.axis_maximum %}
    {% set pos = printer.toolhead.position %}
 
    {% set z_diff = axis_max.z - pos.z %}
    {% set z_safe_lift = [ Z, z_diff ] | min%}
 
    G91                   # relative positioning
    G0 Z{ z_safe_lift }
    # Reset extruder position
    G92 E0
    G1 E5.0 F300        # extrude a little
    G1 E-50 F{ 10 * 60 } # perform the unload
    G1 E-50 F{ 5 * 60 }   # finish the unload
    RESTORE_GCODE_STATE NAME=UNLOAD_state
  {% endif %}
  

[gcode_macro LOAD_FILAMENT]
description: Loads filament into the extruder
gcode:
  {% if printer.extruder.temperature < 180 %}
    {action_respond_info("Extruder temperature too low")}
  {% else %}
    SAVE_GCODE_STATE NAME=LOAD_state
    G91                   # Relative coords
    G1 E50 F{ 5 * 60 }  # extrude
    G4 P{ 0.9 * 1000 }    # dwell (ms)
    G1 E25.0 F{ 5 * 60 }  # extrude a little more
    _ENABLE_FS
    RESTORE_GCODE_STATE NAME=LOAD_state
  {% endif %}


[gcode_macro PURGE]
description: Extrudes filament, used to clean out previous filament
gcode:
  {% if printer.extruder.temperature < 180 %}
    {action_respond_info("Extruder temperature too low")}
  {% else %}
  {% set PURGE_AMOUNT = params.PURGE_AMOUNT|default(40)|float %}
    SAVE_GCODE_STATE NAME=PURGE_state
    G91                   # relative coords
    G1 E{PURGE_AMOUNT} F{ 5 * 60 }  # purge
    RESTORE_GCODE_STATE NAME=PURGE_state
  {% endif %}


[gcode_macro _DISABLE_FS]
description: placeholder, disables filament sensor that might trigger an M600 in the middle of a load/unload/M600...
gcode:
    SET_FILAMENT_SENSOR SENSOR=RUNOUT ENABLE=0

 
[gcode_macro _ENABLE_FS]
description: placeholder, enables filament sensor
gcode:
    SET_FILAMENT_SENSOR SENSOR=RUNOUT ENABLE=1


[gcode_macro HEAT]
description: Heats up the extruder to get ready for Filament Change
gcode:
  {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(200)|float %}
  {% set Z = params.Z|default(50)|float %}
  {% set X = params.X|default(110)|float %}
  {% set Y = params.Y|default(110)|float %}
  SET_HEATER_TEMPERATURE HEATER=extruder TARGET={EXTRUDER_TEMP}
  HOME_CHECK
  G1 Z{Z} F500
  G1 X{X} Y{Y} F6000

 
[gcode_macro COOL]
description: Turns off all heaters
gcode:
  TURN_OFF_HEATERS



[gcode_macro WIPE_NOZZLE]
gcode:
  G91 #Relative positioning
  G1 Z5 F7000

  G90 #Absolute positioning
  G1 Y0.1 F7000
  G1 X30.80 Z15 F8000
  G1 Z8 F6000
  G1 X10.80 F8000
  G1 X30.80 F8000
  G1 X10.80 F8000
  G1 X30.80 F8000
  G1 X10.80 F8000
  G1 X30.80 F8000
  G1 Z15 F7000
  


[gcode_macro CLEAN_NOZZLE]

  variable_start_x: 30.0
  variable_start_y: 0.1
  variable_start_z: 7.0
  variable_end_z: 15.0
  variable_wipe_dist: -20
  variable_wipe_qty: 5

  variable_z_spd: 6000
  #variable_xy_spd: 9000
  variable_wipe_spd: 130
  variable_wipe_start_spd: 25
  variable_raise_distance: 5
  
  
gcode:
   # {% if "xyz" not in printer.toolhead.homed_axes %}
   #     G28
  #  {% endif %}
  {% set xy_spd = (printer.toolhead.max_velocity) * 60 | float %}

    G91 #Relative positioning
    G1 Z{raise_distance} F{z_spd}

    G90 #Absolute positioning
    
    ## Move nozzle to start position
    G1 X{start_x} Y{start_y} F{xy_spd}
    G1 Z{start_z} F{z_spd}
    #G1 X{start_x} Y{start_y} Z{start_z} F{xy_spd * 60}
    
    ## Wipe nozzle
    G1 X{start_x + wipe_dist} F{wipe_start_spd * 60}
    {% for wipes in range(1, (wipe_qty + 1)) %} 
        G1 X{start_x + wipe_dist} F{wipe_spd * 60}
        G1 X{start_x} F{wipe_spd * 60}
        {% endfor %}
## Raise nozzle
  G1 Z{end_z}


[gcode_macro Z_OFFSET]
gcode:
    PROBE_CALIBRATE

#Automatic turning off printer
#[gcode_macro POWER_OFF_PRINTER]
#gcode:
#    {action_call_remote_method("set_device_power", device="printer", state="off")}

  
#[delayed_gcode delayed_printer_off]
#initial_duration: 300.
#gcode:
#  {% if printer.extruder.target >= 50 or printer.extruder.temperature >= 50 or printer.heater_bed.temperature >= 50 or printer.idle_timeout.state == "Printing" %}
#    UPDATE_DELAYED_GCODE ID=delayed_printer_off DURATION=300    
#  {% else %}
#    POWER_OFF_PRINTER
#  {% endif %}